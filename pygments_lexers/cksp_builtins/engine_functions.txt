// set properties functions
set_bounds(control: any, x: int, y: int, width: int, height: int)
set_button_properties(button: int, text: any, picture: string, text_alignment: int, font_type: int, textpos_y: int)
set_knob_properties(knob: int, text: any, default_value: int)
set_label_properties(label: int, text: any, picture: string, text_alignment: int, font_type: int, textpos_y: int)
set_level_meter_properties(level_meter: int, bg_color: int, off_color: int, on_color: int, overload_color: int)
set_menu_properties(menu: int, picture: string, font_type: int, text_alignment: int, textpos_y: int)
set_slider_properties(slider: int, default_value: int, picture: string, mouse_behaviour: int)
set_switch_properties(switch: int, text: any, picture: string, text_alignment: int, font_type: int, textpos_y: int)
set_table_properties(table: int[], bar_color: int, zero_line_color: int)
set_text_edit_properties(textedit: int, text: any, picture: string, text_alignment: int, font_type: int, textpos_y: int)
set_value_edit_properties(value_edit: int, text: any, font_type: int, textpos_y: int, show_arrows: int)
set_waveform_properties(waveform: int, bar_color: int, zero_line_color: int, bg_color: int, bg_alpha: int, wave_color: int, wave_cursor_color: int, slicemarkers_color: int, wf_vis_mode: int)
set_wavetable2d_properties(wavetable: int, wt_zone: int, bg_color: int, bg_alpha: int, wave_color: int, wave_alpha: int, wave_end_color: int, wave_end_alpha: int)
set_wavetable3d_properties(wavetable: int, wt_zone: int, bg_color: int, bg_alpha: int, wt_color: int, wt_alpha: int, wt_end_color: int, wt_end_alpha: int, parallax_x: int, parallax_y: int)

// builtin functions
END_USE_CODE
RESET_CONDITION(condition)
SET_CONDITION(condition)
USE_CODE_IF(condition)
USE_CODE_IF_NOT(condition)
_get_engine_par(parameter: int, group: int, slot: int, generic: int): int
_get_engine_par_disp(parameter: int, group: int, slot: int, generic: int): string
_get_folder(path_variable: string): string
_load_ir_sample(filename: string, slot: int, generic: int): int
_num_slices(group_idx: int): int
_pgs_create_key(keyid: any, size: int)
_pgs_get_key_val(keyid: any, index: int): int
_pgs_key_exists(keyid: any):bool
_pgs_set_key_val(keyid: any, index: int, value: int)
_read_persistent_var(variable: any)
_reset_rls_trig_counter(note: int)
_set_engine_par(parameter: int, value: int, group: int, slot: int, generic: int): int
_set_skin_offset(value: int)
_slice_idx_loop_end(group_idx: int, loop_idx: int): int
_slice_idx_loop_start(group_idx: int, loop_idx: int): int
_slice_length(group_idx: int, slice_idx: int): int
_slice_loop_count(group_idx: int, loop_idx: int): int
_slice_start(group_idx: int, slice_idx: int): int
_will_never_terminate(event_id: int)
abs(value: number): number
acos(value: real): real
add_menu_item(variable: int, text: any, number: int)
add_text_line(variable: int, text: string)
allow_group(group_idx: int)
array_equal(array: int[], array: int[]): bool
asin(value: real): real
atan(value: real): real
attach_level_meter(ui_id: int, group_idx: int, slot_idx: int, channel_idx: int, bus_idx: int)
attach_zone(waveform: int, zone_id: int, parameter: int)
by_marks(bitmark: int): int
by_track(track_idx: int): int
cc_delivery_request(controller_number: int)
ceil(value: real): real
change_listener_par(signaltype: int, parameter: int)
change_note(event_id: int, new_note_number: int)
change_pan(event_id: int, panorama: int, relative_bit: int)
change_time_with_pitch(event_id: int, time: int): int
change_tune(event_id: int, tune_amount: int, relative_bit: int)
change_velo(event_id: int, new_velocity: int)
change_vol(event_id: int, volume: int, relative_bit: int)
cbrt(value: real):real
cos(value: real):real
dec(variable: int)
delete_event_mark(event_id: int, bit_mark: int)
detect_pitch(zone_id: int, return_var: int): int
detect_rms(zone_id: int, return_var: int): int
detect_peak(zone_id: int, return_var: int): int
detect_loudness(zone_id: int, return_var: int): int
detect_sample_type(zone_id: int, return_var: int): int
detect_instrument_type(zone_id: int, return_var: int): int
detect_drum_type(zone_id: int, return_var: int): int
disable_logging(log_type: int)
disallow_group(group_idx: int)
dont_use_machine_mode(event_id: int)
event_status(event_id: int): int
exit
exp(value: real): real
exp2(value: real): real
fade_in(event_id: int, fade_time: int)
fade_out(event_id: int, fade_time: int, stop_voice: int)

// deprecated
find_group(group_name: string): int
find_mod(group_idx: int, mod_name: string): int
find_target(group_idx: int, mod_idx: int, target_name: string): int

find_zone(sample_name: string): int
floor(value: real): real
fs_get_filename(ui_id: int, return_parameter: int): string
fs_navigate(ui_id: int, direction: int)
get_control_par(ui_id: int, control_par: int): int
get_control_par_arr(ui_id: int, control_par: int, index: int): int
get_control_par_real_arr(ui_id: int, control_par: int, index: int): real
get_control_par_str(ui_id: int, control_par: int): string
get_control_par_str_arr(ui_id: int, control_par: int, index: int): string
get_engine_par(parameter: int, group: int, slot: int, generic: int): int
get_engine_par_disp(paramter: int, group: int, slot: int, generic: int): string
get_engine_par_disp_m(parameter: int, group: int, slot: int, generic: int): string
get_engine_par_m(parameter: int, group: int, slot: int, generic: int): int
get_event_ids(array: int[])
get_event_mark(event_id: int, bitmark: int): int
get_event_par(event_id: int, parameter: int): int
get_event_par_arr(event_id: int, parameter: int, group_idx: int): int
get_folder(path_variable: int): string
get_font_id(filepath: string): int
get_group_idx(groupname: string): int
get_group_par(group_idx: int, parameter: int): int
get_key_color(note_number: int): int
get_key_name(note_number: int): int
get_key_triggerstate(note_number: int): int
get_key_type(note_number: int): int
get_keyrange_max_note(note_number: int): int
get_keyrange_min_note(note_number: int): int
get_keyrange_name(note_number: int): int
get_loop_par(zone_id: int, loop_id: int, parameter: int): int
get_menu_item_str(ui_id: int, index: int): string
get_menu_item_value(ui_id: int, index: int): int
get_menu_item_visibility(ui_id: int, index: int): int
get_mod_idx(group_idx: int, mod_name: string): int
get_num_zones(): int
get_purge_state(group_idx: int): int
get_sample(zone_id: int, return_parameter: int): string
get_sample_length(zone_id: int): int
get_target_idx(group_idx, mod_idx: int, target_name: string): int
get_ui_id(variable: any): int
get_ui_wf_property(waveform: int, property: int, index: int): int
get_voice_limit(voice_type: int): int
get_zone_id(zone_idx: int): int
get_zone_par(zone_id: int, parameter): int
get_zone_status(zone_id: int): int
group_name(group_idx: int): string
// guiidx_to_slotidx(instr_gui_idx: int): int
hide_part(variable: any, value: int)
ignore_controller
ignore_event(event_id: int)
ignore_midi
import_nckp(filepath: string): string
in_range(value: number, value: number, value: number): bool
inc(variable: int)
int(value: real): int
int_to_real(value: int): real
is_zone_empty(zone_id: int): int
load_array(array: any[], int): int
load_array_str(array: any[], path: string): int
load_ir_sample(filename: string, slot: int, generic: int): int
load_ir_sample_m(filename: string, output_idx: int, slot: int, generic: int): int
load_native_ui(filepath: string)
load_midi_file(filepath: string): int
load_patch(filepath: string, instr_slot_idx: int)
load_performance_view(filename: string): string
log(value: real): real
log2(value: real): real
log10(value: real): real
lsb(value: int): int
make_instr_persistent(variable: any)
make_perfview
make_persistent(variable: any)
message(value: any)
mf_copy_export_area(zone_id: int)
mf_get_buffer_size(): int
mf_get_byte_one(): int
mf_get_byte_two(): int
mf_get_channel(): int
mf_get_command(): int
mf_get_event_par(event_id: int, parameter: int): int
mf_get_first(track_idx: int)
mf_get_id(): int
mf_get_last(track_idx: int)
mf_get_last_filename(): string
mf_get_length(): int
mf_get_mark(event_id: int, mark: int): int
mf_get_next(track_idx: int)
mf_get_next_at(track_idx: int, pos: int)
mf_get_note_length(): int
mf_get_num_tracks(): int
mf_get_pos(): int
mf_get_prev(track_idx: int)
mf_get_prev_at(track_idx: int, pos: int)
mf_get_track_idx(): int
mf_insert_event(track: int, pos: int, command: int, byte1: int, byte2: int): int
mf_insert_file(path: string, track_offset: int, position_offset: int, mode: int): int
mf_remove_event(event_id: int)
mf_reset(): int
mf_set_buffer_size(num_events: int): int
mf_set_byte_one(value: any)
mf_set_byte_two(value: any)
mf_set_channel(value: any)
mf_set_command(command: any)
mf_set_event_par(event_id: int, parameter: int, value: int)
mf_set_export_area(name: any, startpos: int, endpos: int, start_track: int, end_track: int)
mf_set_note_length(value: any)
mf_set_num_export_areas(value: any)
mf_set_length(value: any)
mf_set_mark(event_id: int, mark: int, status: int)
mf_set_pos(pos: int)
move_control(variable: any, x_position: int, y_position: int)
move_control_px(variable: any, x_pos_px: int, y_pos_px: int)
ms_to_ticks(microseconds: int): int
msb(value: int): int
note_off(event_id: int)
num_elements(array_variable: any[]): int
num_slices(group_idx: int): int
num_slices_zone(zone_id: int): int
output_channel_name(output_idx: int): int
pgs_create_key(variable: pgs, size: int)
pgs_create_str_key(variable: pgs)
pgs_get_key_val(variable: pgs, index: int): int
pgs_get_str_key_val(variable: pgs): string
pgs_key_exists(variable: pgs): bool
pgs_set_key_val(variable: pgs, index: int, value: int)
pgs_set_str_key_val(variable: pgs, text: string)
pgs_str_key_exists(variable: pgs): bool
play_note(note_number: int, velocity: int, sampleoffset: int, duration: int): int
pow(value: real, value: real): real
purge_group(group_idx: int, mode: int): int
random(min: int, max: int): int
read_persistent_var(variable: any)
real(value: int): real
real_to_int(value: real): int
redirect_midi(event_id: int, instr_slot_idx: int, instr_bank_slot_idx: int)
redirect_output(event_id: int, output_type: int, output_idx: int)
remove_keyrange(key_number: int)
reset_engine
reset_ksp_timer
reset_rls_trig_counter(note: int)
round(value: real): real
save_array(array: any[], mode: int): int
save_array_str(array: any[], filepath: string): int
save_midi_file(filepath: string): int
search(array: int[], value: int): int
search(array: int[], value: int, from: int, to: int): int
set_control_help(variable: any, text: string)
set_control_par(ui_id: any, control_parameter: int, value: int)
set_control_par_arr(ui_id: any, control_parameter: int, value: int, index: int)
set_control_par_real_arr(ui_id: any, control_parameter: int, value: real, index: int)
set_control_par_str(ui_id: any, control_parameter: int, text: any)
set_control_par_str_arr(ui_id: any, control_parameter: int, value: any, index: int)
set_controller(cc_num: int, value: int)
set_engine_par(parameter: int, value: int, group: int, slot: int, generic: int): int
set_engine_par_m(parameter: int, value: int, group: int, slot: int, generic: int): int
set_event_mark(event_id: int, bitmark: int)
set_event_par(event_id: int, parameter: int, value: int)
set_event_par_arr(event_id: int, parameter: int, value: int, group_idx: int)
set_group_dyn_par_name(group_dyn_par: int, name: string)
set_key_color(note_number: int, key_color_constant: int)
set_key_name(key_number: int, key_name: string)
set_key_pressed(key_number: int, value: int)
set_key_pressed_support(value: int)
set_key_type(note_number: int, key_type_constant: int)
set_keyrange(key_number1: int, key_number2: int, range_name: string)
set_knob_defval(knob_variable: int, value: int)
set_knob_label(knob_variable: int, text: string)
set_knob_unit(knob_variable: int, unit: int)
set_listener(signal_type: int, parameter: int)
set_loop_par(zone_id: int, loop_id: int, parameter: int, value: int): int
set_menu_item_str(menu_id: int, index: int, text: string)
set_menu_item_value(menu_id: int, index: int, value)
set_menu_item_visibility(menu_id: int, index: int, visibility: int)
set_midi(channel: int, command: int, byte_1: int, byte_2: int)
set_nrpn(address: int, value: int)
set_num_user_zones(size: int)
set_rpn(address: int, value: int)
set_sample(zone_id: int, filepath: string): int
set_script_title(text: string)
set_skin_offset(value: int)
set_snapshot_type(snapshot_type: int)
set_table_steps_shown(array: int[], num_steps: int)
set_text(variable: int, text: string)
set_ui_color(hex_value: int)
set_ui_height(height: int)
set_ui_height_px(value: int)
set_ui_wf_property(waveform: int, property: int, index: int, value: int)
set_ui_width_px(value: int)
set_voice_limit(voice_type: int, value: int)
set_zone_par(zone_id: int, parameter: int, value: int): int
set_map_editor_event_color(hex_value: int)
sgn(value: number): int
sh_left(expression: int, shift_bits: int): int
sh_right(expression: int, shift_bits: int): int
show_library_tab
signbit(value: number): int
sin(value: real): real
slice_idx_loop_end(group_idx: int, loop_idx: int): int
slice_idx_loop_start(group_idx: int, loop_idx: int): int
slice_length(group_idx: int, slice_idx: int): int
slice_loop_count(group_idx: int, loop_idx: int): int
slice_start(group_idx: int, slice_idx: int): int
sort(array: number[], direction: int)
sort(array: number[], direction: int, from: int, to: int)
sqrt(value: real): real
stop_wait(callback_id: int, parameter: int)
tan(value: real): real
ticks_to_ms(ticks: int): int
unload_slot(instr_slot_idx: int)
wait(wait_time: int)
wait_async(event_id: int): int
watch_var(variable: any)
watch_array_idx(array: any[], index: int)
wait_ticks(wait_time: int)
will_never_terminate(event_id)
zone_slice_idx_loop_end(zone_id: int, loop_idx: int): int
zone_slice_idx_loop_start(zone_id: int, loop_idx: int): int
zone_slice_length(zone_id: int, slice_idx: int): int
zone_slice_loop_count(zone_id: int, loop_idx: int): int
zone_slice_start(zone_id: int, slice_idx: int): int
int_to_real(value: int): real
real(value: int): real
real_to_int(value: real): int
int(value: real): int
continue

// nks 2 builtin functions
set_nks_nav_par(group_idx: int,index: int,param_id: int)
get_nks_nav_par(group_idx: int, index: int): int
set_nks_nav_name(group_idx: int,index: int, name: string)
get_nks_nav_name(group_idx: int, index: int): string
reset_nks_nav()